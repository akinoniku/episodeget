// Generated by CoffeeScript 1.6.2
(function() {
  var aviable_list, clone, info_id, info_sort, sub_lists, tags_lists,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  clone = function(obj) {
    var flags, key, newInstance;

    if ((obj == null) || typeof obj !== 'object') {
      return obj;
    }
    if (obj instanceof Date) {
      return new Date(obj.getTime());
    }
    if (obj instanceof RegExp) {
      flags = '';
      if (obj.global != null) {
        flags += 'g';
      }
      if (obj.ignoreCase != null) {
        flags += 'i';
      }
      if (obj.multiline != null) {
        flags += 'm';
      }
      if (obj.sticky != null) {
        flags += 'y';
      }
      return new RegExp(obj.source, flags);
    }
    newInstance = new obj.constructor();
    for (key in obj) {
      newInstance[key] = clone(obj[key]);
    }
    return newInstance;
  };

  info_id = $('#info-view').data('id');

  info_sort = $('#info-view').data('sort');

  sub_lists = JSON.parse(localStorage.getItem('sub_list_' + info_id));

  tags_lists = JSON.parse(localStorage.getItem('tags_list_' + info_sort));

  $('.tags').find('.tags-picker').find('.tag').click(function() {
    var tag_id;

    if ($(this).is('.disabled')) {
      return false;
    }
    tag_id = $(this).data('id');
    if ($('.selected-tags').find('[data-id=' + tag_id + ']').length > 0) {
      $('.selected-tags').find('[data-id=' + tag_id + ']').remove();
      if ($('.selected-tags').find('.tag[data-id]').length === 0) {
        $('.tags').find('.tags-picker').find('.tag').removeClass('passed');
        $('.tags').find('.tags-picker').find('.tag').removeClass('disabled');
        return false;
      }
    } else {
      $(this).clone(true).appendTo($('.selected-tags'));
    }
    $('.selected-tags').find('.tag .tagsinput-remove-link').removeClass('fui-plus-16').addClass('fui-cross-16');
    return aviable_list();
  });

  aviable_list = function(current_list) {
    var current_list_length, flag, innerKey, key, passed_tags, selected_list, t, tag, tags, tags_title, value;

    if (!current_list) {
      current_list = clone(sub_lists);
    }
    selected_list = [];
    flag = true;
    $('.selected-tags').find('.tag').each(function() {
      var id, key, new_list, tags, value, _results;

      id = String($(this).data('id'));
      new_list = [];
      for (key in current_list) {
        tags = current_list[key];
        if (__indexOf.call(tags, id) >= 0 && __indexOf.call(new_list, key) < 0) {
          new_list.push(key);
        }
      }
      if (flag) {
        selected_list = clone(new_list);
      } else {
        for (key in selected_list) {
          value = selected_list[key];
          if (__indexOf.call(new_list, value) < 0) {
            delete selected_list[key];
          }
        }
      }
      flag = false;
      _results = [];
      for (key in current_list) {
        tags = current_list[key];
        if (__indexOf.call(selected_list, key) < 0) {
          _results.push(delete current_list[key]);
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    });
    passed_tags = [];
    current_list_length = ((function() {
      var _results;

      _results = [];
      for (key in current_list) {
        value = current_list[key];
        _results.push(key);
      }
      return _results;
    })()).length;
    if (current_list_length === 0) {
      $('.add-select.dk_container').addClass('disabled').find('.dk_label').text('请先从右边添加筛选条件');
    } else if (current_list_length === 1) {
      $('.add-select.dk_container').removeClass('disabled').find('.dk_label').text('结果唯一，点击添加');
    } else {
      $('.add-select.dk_container').removeClass('disabled').find('.dk_label').text('有 ' + current_list_length + ' 个结果，点击查看列表');
    }
    $('#list-selector-dp').empty();
    for (key in current_list) {
      tags = current_list[key];
      tags_title = '';
      for (innerKey in tags) {
        tag = tags[innerKey];
        t = $('#sub-list-tag-id-' + tag).data('title');
        if (t) {
          tags_title += t + ' | ';
        }
      }
      $('#list-selector-dp').append("<li><a data-value=\"" + key + "\">" + tags_title + "</a></li>");
      if (__indexOf.call(selected_list, key) >= 0) {
        for (key in tags) {
          tag = tags[key];
          if (__indexOf.call(passed_tags, tag) < 0) {
            passed_tags.push(tag);
          }
        }
      }
    }
    $('.tags').find('.tags-picker').find('.tag').removeClass('passed');
    $('.tags').find('.tags-picker').find('.tag').removeClass('disabled');
    for (key in passed_tags) {
      tag = passed_tags[key];
      $('.tags').find('.tags-picker').find('.tag[data-id="' + tag + '"]').addClass('passed');
    }
    return $('.tags').find('.tags-picker').find('.tag').not('.passed').addClass('disabled');
  };

}).call(this);

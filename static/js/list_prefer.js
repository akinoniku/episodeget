// Generated by CoffeeScript 1.6.2
(function() {
  $(document).ready(function() {
    var $p_container, $style, getTagsSort, getTypeSort, key, prefer, preferList, style, tag_id, tag_list, type, _results;

    $(".sortable").sortable({
      axis: "y",
      cursor: 'move',
      opacity: 0.8,
      scroll: true
    }).disableSelection();
    $(".p-sort").sortable({
      axis: "x",
      cursor: 'move',
      opacity: 0.8
    }).disableSelection();
    $('.type-select').find('.btn').click(function() {
      var sort;

      $(this).siblings().removeClass('active');
      sort = $(this).addClass('active').data('type');
      $('.p-container').hide();
      return $('.p-container.' + sort).show();
    });
    getTypeSort = function(type) {
      return $('.p-container.' + type).find(".p-sort").sortable("toArray", {
        attribute: "data-type"
      });
    };
    getTagsSort = function(type, style) {
      return $('.p-container.' + type).find(".p-tags." + style).find(".sortable").sortable("toArray", {
        attribute: "data-id"
      });
    };
    $('.save-btn').click(function() {
      var preferList, style, type, _i, _j, _len, _len1, _ref, _ref1;

      preferList = {};
      _ref = ['an', 'ep'];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        type = _ref[_i];
        preferList[type] = {};
        _ref1 = getTypeSort(type);
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          style = _ref1[_j];
          preferList[type][style] = getTagsSort(type, style);
        }
      }
      return localStorage.setItem('preferList', JSON.stringify(preferList));
    });
    preferList = JSON.parse(localStorage.getItem('preferList'));
    _results = [];
    for (type in preferList) {
      prefer = preferList[type];
      $p_container = $('.p-container.' + type).find('.p-sort');
      _results.push((function() {
        var _results1;

        _results1 = [];
        for (style in prefer) {
          tag_list = prefer[style];
          $p_container.append($p_container.find(".p-tags." + style));
          $style = $p_container.find(".p-tags." + style).find(".sortable");
          _results1.push((function() {
            var _results2;

            _results2 = [];
            for (key in tag_list) {
              tag_id = tag_list[key];
              _results2.push($style.append($style.find("[data-id='" + tag_id + "']")));
            }
            return _results2;
          })());
        }
        return _results1;
      })());
    }
    return _results;
  });

}).call(this);

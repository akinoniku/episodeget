// Generated by CoffeeScript 1.6.2
(function() {
  angular.module('episodeGet.controllers', []).controller('HomePageCtrl', function() {
    $('.home-hero').height($(window).height() - 4);
    $(window).resize(function() {
      return $('.home-hero').height($(window).height() - 4);
    });
    $('.btn-reg-top').click(function() {
      return $.scrollTo('.login-screen', 1000);
    });
    $('.hero-help').click(function() {
      return $.scrollTo('.feature-intro-word', 800);
    });
    return $('.feature-item').mouseenter(function() {
      return $(this).stop().addClass('animated swing');
    });
  }).controller('NavCtrl', function($scope, $http, userService) {
    $http.defaults.headers.post['X-CSRFToken'] = $.cookie('csrftoken');
    $http.defaults.headers.post["Content-Type"] = "application/x-www-form-urlencoded";
    $scope.user = userService.user;
    $scope.$on('userService.update', function(event, user) {
      return $scope.user = user;
    });
    $scope.login = {
      username: '',
      password: '',
      status: true,
      show: false,
      login_id: 'top',
      logined: !!userService.user.id,
      showLogin: function() {
        return this.show = !this.show;
      },
      isShownLogin: function() {
        return this.show;
      },
      isLogined: function() {
        return this.logined;
      },
      loginActionStatus: function() {
        return this.status;
      },
      loginSubmit: function() {
        return $http({
          method: 'POST',
          url: '/accounts/login/ajax/',
          data: $.param({
            username: this.username,
            password: this.password
          })
        }).success(function(data) {
          $scope.login.status = !!data.id;
          if (data.id) {
            userService.updateUser(data);
            $scope.login.logined = true;
            return $scope.login.show = false;
          }
        });
      },
      checkLogin: function() {
        if (!$scope.login.logined) {
          return $http({
            method: 'GET',
            url: '/accounts/current/'
          }).success(function(data) {
            userService.updateUser(data);
            return $scope.login.logined = data.id !== 0;
          }).error(function() {
            $scope.user = userService.user;
            return $scope.login.logined = false;
          });
        }
      }
    };
    return $scope.login.checkLogin();
  }).controller('InfoListCtrl', function($scope, $http, $routeParams, infoListService) {
    var sort;

    sort = $routeParams.sort;
    $scope.$on('infoListService.update', function(event, List) {
      return $scope.currentList = List[sort];
    });
    $scope.currentList = infoListService.list[sort];
    $scope.sortInfo = infoListService.sortInfo;
    $scope.sort = sort;
    return infoListService.getList(sort);
  }).controller('InfoViewCtrl', function($scope, $http, $routeParams, infoListService, infoService, tagsListService, subListService, userService) {
    var id, sort, _ref;

    _ref = [$routeParams.id, $routeParams.sort], id = _ref[0], sort = _ref[1];
    $scope.user = userService.user;
    $scope.$on('userService.update', function(event, user) {
      return $scope.user = user;
    });
    $scope.$on('infoListService.update', function(event, List) {
      return $scope.list = List;
    });
    $scope.info = infoService.getInfo(sort, id);
    $scope.$on('tagsListService.update', function(event, list) {
      return $scope.tagsList = list;
    });
    tagsListService.getList(sort);
    $scope.tagsList = tagsListService.list[sort];
    subListService.getList(sort, id);
    $scope.$on('subListService.update', function(event, subList, subListTags) {
      $scope.subList = subList;
      return $scope.subListTags = subListTags;
    });
    $scope.tagClass = function() {
      if (this.tag["switch"]) {
        return 'tag';
      } else {
        return 'tag disabled';
      }
    };
    $scope.pickTag = function(style, id) {
      return subListService.pickTag(style, id);
    };
    $scope.filterClean = function() {
      return subListService.filterClean();
    };
    return $scope.addSubList = function(listId) {
      return $http({
        method: 'GET',
        url: 'add_list_ajax/',
        data: $.param({
          listId: listId
        })
      }).success(function() {
        var var1;

        return var1 = 1;
      }).error(function() {
        var var1;

        return var1 = 1;
      });
    };
  }).controller('UserAccountCtrl', function($scope, $http) {
    return $scope.test = 1;
  });

}).call(this);

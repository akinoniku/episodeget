// Generated by CoffeeScript 2.0.0-beta5
angular.module('episodeGet.controllers', []).controller('HomePageCtrl', function () {
  $('.home-hero').height($(window).height() - 4);
  $(window).resize(function () {
    return $('.home-hero').height($(window).height() - 4);
  });
  $('.btn-reg-top').click(function () {
    return $.scrollTo('.login-screen', 1e3);
  });
  $('.hero-help').click(function () {
    return $.scrollTo('.feature-intro-word', 800);
  });
  return $('.feature-item').mouseenter(function () {
    return $(this).stop().addClass('animated swing');
  });
}).controller('NavCtrl', function ($scope, $http, userService) {
  $scope.user = userService.user;
  $scope.$on('userService.update', function (event, user) {
    return $scope.user = user;
  });
  $scope.login = {
    username: '',
    password: '',
    status: true,
    show: false,
    login_id: 'top',
    logined: !!userService.user.id,
    showLogin: function () {
      return this.show = !this.show;
    },
    isShownLogin: function () {
      return this.show;
    },
    isLogined: function () {
      return this.logined;
    },
    loginActionStatus: function () {
      return this.status;
    },
    loginSubmit: function () {
      return $scope.login.status = userService.loginSubmit(this.username, this.password);
    },
    checkLogin: function () {
      if (!$scope.login.logined)
        return $http({
          method: 'GET',
          url: '/accounts/current/'
        }).success(function (data) {
          userService.updateUser(data);
          return $scope.login.logined = data.id !== 0;
        }).error(function () {
          $scope.user = userService.user;
          return $scope.login.logined = false;
        });
    }
  };
  $scope.$on('userService.login', function (event, user) {
    $scope.user = user;
    $scope.login.status = !!user.id;
    if (user.id) {
      $scope.login.logined = true;
      return $scope.login.show = false;
    }
  });
  return $scope.login.checkLogin();
}).controller('InfoListCtrl', function ($scope, $http, $routeParams, infoListService) {
  var sort;
  sort = $routeParams.sort;
  $scope.$on('infoListService.update', function (event, List) {
    return $scope.currentList = List[sort];
  });
  $scope.currentList = infoListService.list[sort];
  $scope.sortInfo = infoListService.sortInfo;
  $scope.sort = sort;
  $scope.inListView = true;
  return infoListService.getList(sort);
}).controller('InfoViewCtrl', function ($scope, $http, $routeParams, $location, infoListService, infoService, tagsListService, subListService, userService) {
  var cache$, id, sort;
  cache$ = [
    $routeParams.id,
    $routeParams.sort
  ];
  id = cache$[0];
  sort = cache$[1];
  $scope.user = userService.user;
  $scope.$on('userService.update', function (event, user) {
    return $scope.user = user;
  });
  $scope.$on('infoListService.update', function (event, List) {
    return $scope.list = List;
  });
  $scope.info = infoService.getInfo(sort, id);
  $scope.$on('tagsListService.update', function (event, list) {
    return $scope.tagsList = list;
  });
  tagsListService.getList(sort);
  $scope.tagsList = tagsListService.list[sort];
  subListService.getList(sort, id);
  $scope.$on('subListService.update', function (event, subList, subListTags) {
    $scope.subList = subList;
    return $scope.subListTags = subListTags;
  });
  $scope.tagClass = function () {
    if (this.tag['switch']) {
      return 'tag';
    } else {
      return 'tag disabled';
    }
  };
  $scope.pickTag = function (style, id) {
    return subListService.pickTag(style, id);
  };
  $scope.filterClean = function () {
    return subListService.filterClean();
  };
  $scope.addListBtn = '\u6dfb\u52a0';
  return $scope.addSubList = function () {
    return $http({
      method: 'POST',
      url: 'add_list_ajax/',
      data: $.param({ list_id: this.list.id })
    }).success(function () {
      return $location.path('/accounts');
    }).error(function () {
      return $scope.addListBtn = '\u54a6\uff0c\u597d\u50cf\u51fa\u9519\u4e86';
    });
  };
}).controller('UserAccountCtrl', function ($scope, $http, userService, $filter) {
  $scope.inAccount = true;
  $scope.user = userService.user;
  userService.listUpdate();
  $scope.$on('userService.listUpdate', function (event, user) {
    $scope.user = user;
    return function (accum$) {
      var list;
      for (var i$ = 0, length$ = user.list.length; i$ < length$; ++i$) {
        list = user.list[i$];
        list.tagsString = '';
        accum$.push(function (accum$1) {
          var tag;
          for (var i$1 = 0, length$1 = list.tags.length; i$1 < length$1; ++i$1) {
            tag = list.tags[i$1];
            accum$1.push(list.tagsString += ' ' + $filter('getTagNameById')(tag, list.sort));
          }
          return accum$1;
        }.call(this, []));
      }
      return accum$;
    }.call(this, []);
  });
  return $scope.removeSubList = function () {
    return $http({
      method: 'POST',
      url: 'remove_list_ajax/',
      data: $.param({ list_id: this.list.id })
    }).success(function () {
      return userService.listUpdate();
    });
  };
}).controller('PreferCtrl', function ($scope, $http, userService, tagsListService) {
  var resortTag;
  $scope.inAccount = true;
  $scope.user = userService.user;
  $scope.tagsList = {};
  resortTag = function (tags) {
    var k, subListTags, tag;
    subListTags = {
      TM: [],
      CL: [],
      FM: [],
      LG: []
    };
    for (k in tags) {
      tag = tags[k];
      subListTags[tag.style].push(tag);
    }
    return subListTags;
  };
  return function (accum$) {
    var sort;
    for (var cache$ = [
          'an',
          'ep'
        ], i$ = 0, length$ = cache$.length; i$ < length$; ++i$) {
      sort = cache$[i$];
      $scope.$on('tagsListService.update', function (event, list) {
        return $scope.tagsList[sort] = resortTag(list);
      });
      tagsListService.getList(sort);
      accum$.push($scope.tagsList[sort] = resortTag(tagsListService.list[sort]));
    }
    return accum$;
  }.call(this, []);
});
